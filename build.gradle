apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'eu.schnuckelig.gradle'
version = '1.0-SNAPSHOT'

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
    description = 'Gradle JBoss ESB plugin for packaging ESB files'
    packaging = 'jar'
    projectUrl = 'https://github.com/tklein/gradle-esb-plugin'
    scmBrowseUrl = 'https://github.com/tklein/gradle-esb-plugin'
    scmUrl = 'scm:git:https://github.com/tklein/gradle-esb-plugin.git'
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'javax.inject:javax.inject:1'

    testCompile 'junit:junit:4.11'
}

// Work-around for the groovy compiler
// cross-compile between Java and Groovy when there are references back and forth,
// the Groovy compiler has to handle compiling both Java and Groovy sources.
sourceSets.main.java.srcDirs = [] // ie there's no stand-alone java source
sourceSets.main.groovy.srcDir 'src/main/java' // ie include the 'java' dir as groovy source

repositories {
    mavenCentral()
}


uploadArchives {
    repositories {
    	def repositoryUsername = project.hasProperty('sonatypeUsername') ? sonatypeUsername : ''
	def repositoryPassword = project.hasProperty('sonatypePassword') ? sonatypePassword : ''

        mavenDeployer {
            beforeDeployment {
            	MavenDeployment deployment -> signing.signPom(deployment)
            }

	    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
	        authentication(userName: repositoryUsername, password: repositoryPassword)
	    }
	    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
	        authentication(userName: repositoryUsername, password: repositoryPassword)
	    }

            pom.project {
		name     archivesBaseName
		packaging packaging
		description project.ext.description
		url projectUrl
		inceptionYear '2013'

		scm {
		    url scmBrowseUrl
		    connection scmUrl
		}

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
		    developer {
			id 'tklein'
			name 'Thorsten Klein'
			email 'dev@perlwizard.de'
			url 'http://www.schnuckelig.eu'

			roles {
			    role 'Developer'
			}
			timezone '+1'
		    }
		}
            }
        }
    }
}

// Make sure all code is compiled, tested and checked before uploadArchives.
uploadArchives.dependsOn ':build'

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn:classes) {
     classifier = 'sources'
     from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
     classifier = 'javadoc'
     from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
	archives sourcesJar
	archives javadocJar
}

signing {
	if (isReleaseVersion) {
	    sign configurations.archives
	}
}
